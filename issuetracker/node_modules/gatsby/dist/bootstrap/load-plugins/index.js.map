{"version":3,"sources":["../../../src/bootstrap/load-plugins/index.js"],"names":["_","require","store","nodeAPIs","browserAPIs","ssrAPIs","loadPlugins","collatePluginAPIs","handleBadExports","handleMultipleReplaceRenderers","apis","node","keys","browser","ssr","flattenPlugins","plugins","flattened","extractPlugins","plugin","pluginOptions","forEach","subPlugin","push","module","exports","config","rootDir","flattenedPlugins","x","badExports","dispatch","type","payload"],"mappings":";;AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAE,QAAF,CAAjB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYD,OAAO,CAAE,aAAF,CAAzB;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAE,2BAAF,CAAxB;;AACA,MAAMG,WAAW,GAAGH,OAAO,CAAE,8BAAF,CAA3B;;AACA,MAAMI,OAAO,GAAGJ,OAAO,CAAE,iCAAF,CAAvB;;AACA,MAAMK,WAAW,GAAGL,OAAO,CAAE,QAAF,CAA3B;;AACA,MAAM;AACJM,EAAAA,iBADI;AAEJC,EAAAA,gBAFI;AAGJC,EAAAA;AAHI,IAIFR,OAAO,CAAE,YAAF,CAJX;;AAMA,MAAMS,IAAI,GAAG;AACXC,EAAAA,IAAI,EAAEX,CAAC,CAACY,IAAF,CAAOT,QAAP,CADK;AAEXU,EAAAA,OAAO,EAAEb,CAAC,CAACY,IAAF,CAAOR,WAAP,CAFE;AAGXU,EAAAA,GAAG,EAAEd,CAAC,CAACY,IAAF,CAAOP,OAAP,CAHM,CAMb;AACA;AACA;;AARa,CAAb;;AASA,MAAMU,cAAc,GAAGC,OAAO,IAAI;AAChC,QAAMC,SAAS,GAAG,EAAlB;;AACA,QAAMC,cAAc,GAAGC,MAAM,IAAI;AAC/BA,IAAAA,MAAM,CAACC,aAAP,CAAqBJ,OAArB,CAA6BK,OAA7B,CAAqCC,SAAS,IAAI;AAChDL,MAAAA,SAAS,CAACM,IAAV,CAAeD,SAAf;AACAJ,MAAAA,cAAc,CAACI,SAAD,CAAd;AACD,KAHD;AAID,GALD;;AAOAN,EAAAA,OAAO,CAACK,OAAR,CAAgBF,MAAM,IAAI;AACxBF,IAAAA,SAAS,CAACM,IAAV,CAAeJ,MAAf;AACAD,IAAAA,cAAc,CAACC,MAAD,CAAd;AACD,GAHD;AAKA,SAAOF,SAAP;AACD,CAfD;;AAiBAO,MAAM,CAACC,OAAP,GAAiB,OAAOC,MAAM,GAAG,EAAhB,EAAoBC,OAAO,GAAG,IAA9B,KAAuC;AACtD;AACA,QAAMX,OAAO,GAAGV,WAAW,CAACoB,MAAD,EAASC,OAAT,CAA3B,CAFsD,CAItD;;AACA,MAAIC,gBAAgB,GAAGb,cAAc,CAACC,OAAD,CAArC,CALsD,CAOtD;AACA;;AACA,QAAMa,CAAC,GAAGtB,iBAAiB,CAAC;AAAEG,IAAAA,IAAF;AAAQkB,IAAAA;AAAR,GAAD,CAA3B;AACAA,EAAAA,gBAAgB,GAAGC,CAAC,CAACD,gBAArB;AACA,QAAME,UAAU,GAAGD,CAAC,CAACC,UAArB,CAXsD,CAatD;;AACAtB,EAAAA,gBAAgB,CAAC;AAAEE,IAAAA,IAAF;AAAQoB,IAAAA;AAAR,GAAD,CAAhB,CAdsD,CAgBtD;;AACAF,EAAAA,gBAAgB,GAAGnB,8BAA8B,CAAC;AAChDmB,IAAAA;AADgD,GAAD,CAAjD,CAjBsD,CAqBtD;;AACA1B,EAAAA,KAAK,CAAC6B,QAAN,CAAe;AACbC,IAAAA,IAAI,EAAG,4BADM;AAEbC,IAAAA,OAAO,EAAEL;AAFI,GAAf;AAKA,SAAOA,gBAAP;AACD,CA5BD","sourcesContent":["const _ = require(`lodash`)\n\nconst { store } = require(`../../redux`)\nconst nodeAPIs = require(`../../utils/api-node-docs`)\nconst browserAPIs = require(`../../utils/api-browser-docs`)\nconst ssrAPIs = require(`../../../cache-dir/api-ssr-docs`)\nconst loadPlugins = require(`./load`)\nconst {\n  collatePluginAPIs,\n  handleBadExports,\n  handleMultipleReplaceRenderers,\n} = require(`./validate`)\n\nconst apis = {\n  node: _.keys(nodeAPIs),\n  browser: _.keys(browserAPIs),\n  ssr: _.keys(ssrAPIs),\n}\n\n// Create a \"flattened\" array of plugins with all subplugins\n// brought to the top-level. This simplifies running gatsby-* files\n// for subplugins.\nconst flattenPlugins = plugins => {\n  const flattened = []\n  const extractPlugins = plugin => {\n    plugin.pluginOptions.plugins.forEach(subPlugin => {\n      flattened.push(subPlugin)\n      extractPlugins(subPlugin)\n    })\n  }\n\n  plugins.forEach(plugin => {\n    flattened.push(plugin)\n    extractPlugins(plugin)\n  })\n\n  return flattened\n}\n\nmodule.exports = async (config = {}, rootDir = null) => {\n  // Collate internal plugins, site config plugins, site default plugins\n  const plugins = loadPlugins(config, rootDir)\n\n  // Create a flattened array of the plugins\n  let flattenedPlugins = flattenPlugins(plugins)\n\n  // Work out which plugins use which APIs, including those which are not\n  // valid Gatsby APIs, aka 'badExports'\n  const x = collatePluginAPIs({ apis, flattenedPlugins })\n  flattenedPlugins = x.flattenedPlugins\n  const badExports = x.badExports\n\n  // Show errors for any non-Gatsby APIs exported from plugins\n  handleBadExports({ apis, badExports })\n\n  // Show errors when ReplaceRenderer has been implemented multiple times\n  flattenedPlugins = handleMultipleReplaceRenderers({\n    flattenedPlugins,\n  })\n\n  // If we get this far, everything looks good. Update the store\n  store.dispatch({\n    type: `SET_SITE_FLATTENED_PLUGINS`,\n    payload: flattenedPlugins,\n  })\n\n  return flattenedPlugins\n}\n"],"file":"index.js"}